{
    "$id": "https://raw.githubusercontent.com/mxcop/whisk/main/docs/whisk.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Whisk manifest (whisk.toml)",
    "description": "A schema for whisk manifest.",
    "x-taplo-info": {
        "authors": [
            "Max <mxcop> (https://github.com/mxcop)"
        ],
        "patterns": [
            "^(.*(/|\\\\)whisk\\.toml|whisk\\.toml)$"
        ]
    },
    "type": "object",
    "properties": {
        "package": {
            "$ref": "#/definitions/Package"
        },
        "target": {
            "$ref": "#/definitions/Profile"
        }
    },
    "definitions": {
        "Package": {
            "allOf": [
                {
                    "title": "Package",
                    "description": "The only field required by Whisk is [`name`]().",
                    "type": "object",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "description": "The package name is an identifier used to refer to the package.\nIt is also the default name of the output binary.",
                            "type": "string"
                        },
                        "lang": {
                            "description": "The package language can either be `c` or `c++`. It is used\nto determine how to build the package and which files to expect. (default `c++`)",
                            "type": "string",
                            "enum": [
                                "c",
                                "c++"
                            ],
                            "default": "c++",
                            "x-taplo": {
                                "defaultValue": "c++"
                            }
                        },
                        "type": {
                            "description": "The package type determines how the code is packaged.\nIt can either be `exe` for an executable or `lib` for a library. (default `exe`)",
                            "type": "string",
                            "enum": [
                                "exe",
                                "lib"
                            ],
                            "default": "exe",
                            "x-taplo": {
                                "enumValues": [
                                    "Build this package as an executable.",
                                    "Build this package as a library."
                                ],
                                "defaultValue": "exe"
                            }
                        }
                    }
                },
                {
                    "$ref": "#/definitions/Target"
                }
            ]
        },
        "Target": {
            "title": "Target",
            "description": "A target of a Whisk package.\nSpecifies info required to build the package.",
            "type": "object",
            "compiler": {
                "description": "The compiler to use when compiling the package. (should be a GCC-compatible compiler)\nIt will be used as a command so `gcc` or `path/to/gcc` would both be valid.",
                "type": "string"
            },
            "src": {
                "description": "The paths / glob patterns to all package source files. `.c` / `.cpp`\n(e.g. `src/**/*.c`, `src/main.cpp`, ...)",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "minItems": 1,
                "uniqueItems": true
            },
            "include": {
                "description": "The include directories for this package, the locations from which the compiler will search for header files.\n(e.g. `src`, `./inc`, `src/`, ...)",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "uniqueItems": true
            },
            "libs": {
                "description": "The library directories for this package, the locations from which the compiler will search for libraries.\n(e.g. `lib`, `./lib`, `lib/`, ...)",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "uniqueItems": true
            },
            "lib": {
                "description": "The libraries used by this package, they should be located within directories specified in the `libs`.\n(e.g. `glfw`, `sdl`, ...)",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "uniqueItems": true
            }
        },
        "Targets": {
            "title": "Targets",
            "description": "Targets provide a way to alter the compiler settings for different build environments.",
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/Target"
            }
        }
    }
}